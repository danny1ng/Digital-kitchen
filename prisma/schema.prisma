// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(USER)
  blocked   Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Event {
  id           String      @id @default(uuid())
  title        String      @unique
  description  String
  date         DateTime
  time         String?
  banner       String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?
}

model Restaurant {
  id                     String  @id @default(uuid())
  name                   String
  toastGuid              String?
  toastToken             String?
  toastManagementSetGuid String?
  events                 Event[]
  menu                   Menu[]
}

model Menu {
  id           Int         @id @default(autoincrement())
  name         String
  position     Int
  items        MenuGroup[]
  restaurant   Restaurant? @relation(fields: [restaurantId], references: [id])
  restaurantId String?
}

model MenuGroup {
  id     Int        @id @default(autoincrement())
  name   String
  menuId Int
  menu   Menu       @relation(fields: [menuId], references: [id])
  items  MenuItem[]
}

model MenuItem {
  id              Int       @id @default(autoincrement())
  name            String
  description     String?
  image           String?
  calories        Int?
  basePrice       Float?
  maxPrice        Float?
  minPrice        Float?
  inheritPricing  Boolean
  pricingStrategy String?
  imageToast      String?
  menuGroupId     Int
  menuGroup       MenuGroup @relation(fields: [menuGroupId], references: [id])
}
